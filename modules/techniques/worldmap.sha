block WdmModelDrawStd()
{
	technique t0
	{
		pass p0
		{
			Lighting = false;
			FogEnable = false;

			ColorArg1[0] = texture;
			ColorOp[0] = SelectArg1;
			ColorOp[1] = disable;
			AlphaOp[0] = disable;

			AlphaTestEnable = false;
			AlphaBlendEnable = false;

			Render.Draw

			Restore.States
		}
	}
}

block WdmModelDrawStdAlphaTest()
{
	technique t0
	{
		pass p0
		{
			Lighting = false;
			FogEnable = false;

			ColorArg1[0] = texture;
			ColorOp[0] = SelectArg1;
			ColorOp[1] = disable;
			AlphaArg1[0] = texture;
			AlphaOp[0] = SelectArg1;
			AlphaOp[1] = disable;

			AlphaTestEnable = false;
			AlphaBlendEnable = true;

			Render.Draw

			Restore.States
		}
	}
}



block WdmModelDrawStdA()
{
	technique t0
	{
		pass p0
		{
			Lighting = false;
			FogEnable = false;

			ColorArg1[0] = texture;
			ColorOp[0] = SelectArg1;
			ColorOp[1] = disable;
			AlphaArg1[0] = tfactor;
			AlphaOp[0] = SelectArg1;
			AlphaOp[1] = disable;

			AlphaTestEnable = false;
			AlphaBlendEnable = true;

			SrcBlend = srcalpha;
			DestBlend = invsrcalpha;
			
			Render.Draw

			Restore.States
		}
	}
}

block WdmCounterDrawSky()
{
	technique t0
	{
		pass p0
		{
			Lighting = false;
			FogEnable = false;

			TexCoordIndex[0] = 0;
			TexCoordIndex[1] = 0;
			ColorArg1[0] = texture;
			ColorOp[0] = SelectArg1;
			ColorArg1[1] = texture;
			ColorArg2[1] = current;
			ColorOp[1] = blendfactoralpha;
			ColorOp[2] = disable;
			AlphaOp[0] = selectarg1;
			AlphaArg1[0] = tfactor;
			AlphaOp[1] = disable;

			AlphaTestEnable = false;
			AlphaBlendEnable = false;

			Render.Draw

			Restore.States
		}
	}
}

block WdmCounterDrawNumber()
{
	technique t0
	{
		pass p0
		{
			Lighting = false;
			FogEnable = false;

			ColorArg1[0] = texture;
			ColorOp[0] = SelectArg1;
			ColorArg1[1] = texture;
			ColorArg2[1] = current;
			ColorOp[1] = addsigned;
			ColorOp[2] = disable;
			AlphaOp[0] = disable;

			AlphaTestEnable = false;
			AlphaBlendEnable = false;

			Render.Draw

			Restore.States
		}
	}
}

VertexShader WdmCloudsVS
{
	decl
	{
        stream[0];

        float v0[3];	//Position
		color v1;		//color
		float v2[2];	//uv1
    }
    
	asm
	{
		vs.1.1

		//Позиция
		mov  r0, v0
		mul  r1, r0.xxxx, c[0]
		mad  r1, r0.yyyy, c[1], r1
		mad  r1, r0.zzzz, c[2], r1
		add  oPos, r1, c[3]
		//Цвет
		mov  oD0, v1.xxxw
		mul  oD1, v1.yyyw, c[6]
		//Текстурные координаты первой стадии
		mov  oT0, v2
		//Генерим текстурные координаты второй стадии
		//Длинна вектора для данного квадрата
		mov  r2, c[5]
		mad  r2.w, v1.z, r2.z, r2.x
		//Вертикальная компонента вектора
		dp4  r1, r0, c[4]
		//Нормализуем и приводим к единичному диапазону
		rcp  r2.w, r2.w
		mad  r1.w, r1.w, r2.w, c[5].w
		mov oT1, r1.wwww
	}
}

block WdmClouds()
{
	technique t0
	{
		pass p0
		{
			Lighting = false;
			FogEnable = false;

			zwriteenable = false;
			
			SrcBlend = srcalpha;
			DestBlend = invsrcalpha;
			cullmode = none;
			
			AlphaTestEnable = false;
			//AlphaBlendEnable = false;
			AlphaBlendEnable = true;
			
			ColorArg1[0] = texture;
			ColorArg2[0] = diffuse;
			ColorOp[0] = modulate;
			ColorArg1[1] = texture;
			ColorArg2[1] = current;
			ColorOp[1] = modulate;
			ColorArg1[2] = specular;
			ColorArg2[2] = current;
			ColorOp[2] = add;
			ColorOp[3] = disable;
			AlphaArg1[0] = texture;
			AlphaArg2[0] = diffuse;
			AlphaOp[0] = modulate;
			AlphaOp[1] = disable;
			
			AddressU[1] = clamp;
			AddressV[1] = clamp;
			
			VertexShader = "WdmCloudsVS";

			Render.Draw

			Restore.States
		}
	}
}

block WdmLightning()
{
	technique t0
	{
		pass p0
		{
			Lighting = false;
			FogEnable = false;

			zwriteenable = false;
			
			SrcBlend = srcalpha;
			DestBlend = one;
			cullmode = none;
			
			AlphaTestEnable = false;
			//AlphaBlendEnable = false;
			AlphaBlendEnable = true;
			
			ColorArg1[0] = texture;
			ColorOp[0] = SelectArg1;
			ColorOp[1] = disable;
			AlphaArg1[0] = diffuse;
			AlphaOp[0] = SelectArg1;
			AlphaOp[1] = disable;

			Render.Draw

			Restore.States
		}
	}
}

block WdmRain()
{
	technique t0
	{
		pass p0
		{
			Lighting = false;
			FogEnable = false;

			zwriteenable = false;
			
			SrcBlend = srcalpha;
			DestBlend = invsrcalpha;
			cullmode = none;
			
			AlphaTestEnable = false;
			//AlphaBlendEnable = false;
			AlphaBlendEnable = true;
			
			ColorArg1[0] = texture;
			ColorOp[0] = SelectArg1;
			ColorOp[1] = disable;
			AlphaArg1[0] = texture;
			AlphaArg2[0] = diffuse;
			AlphaOp[0] = modulate;
			AlphaOp[1] = disable;

			Render.Draw

			Restore.States
		}
	}
}


block WdmWarringShipClouds()
{
	technique t0
	{
		pass p0
		{
			Lighting = false;
			FogEnable = false;

			zwriteenable = false;
			
			SrcBlend = srcalpha;
			DestBlend = invsrcalpha;
			cullmode = none;
			
			AlphaTestEnable = false;
			AlphaBlendEnable = true;
			
			ColorArg1[0] = texture;
			ColorArg2[0] = diffuse;
			ColorOp[0] = modulate;
			ColorOp[1] = disable;
			AlphaArg1[0] = texture;
			AlphaArg2[0] = diffuse;
			AlphaOp[0] = modulate;
			AlphaOp[1] = disable;

			Render.Draw

			Restore.States
		}
	}
}

block WdmShipWaterTrack()
{
	technique t0
	{
		pass p0
		{
			Lighting = false;
			FogEnable = false;

			zwriteenable = false;
			
			SrcBlend = one;
			DestBlend = one;
			cullmode = none;
			
			AlphaTestEnable = false;
			AlphaBlendEnable = true;
			
			ColorArg1[0] = texture;
			ColorArg2[0] = diffuse;
			ColorOp[0] = modulate;
			ColorOp[1] = disable;
			AlphaOp[0] = disable;

			Render.Draw

			Restore.States
		}
	}
}

block WdmDebugDraw()
{
	technique t0
	{
		pass p0
		{
			Lighting = false;
			FogEnable = false;

			zenable = false;
			zwriteenable = false;
			
			SrcBlend = srcalpha;
			DestBlend = invsrcalpha;
			cullmode = none;
			
			AlphaTestEnable = false;
			AlphaBlendEnable = true;
			
			ColorArg1[0] = texture;
			ColorArg2[0] = diffuse;
			ColorOp[0] = SelectArg2;
			ColorOp[1] = disable;
			AlphaOp[0] = disable;

			Render.Draw

			Restore.States
		}
	}
}

block WdmDrawLabelIcon()
{
	technique t0
	{
		pass p0
		{
			Lighting = false;
			FogEnable = false;

			zenable = false;
			zwriteenable = false;
			
			SrcBlend = srcalpha;
			DestBlend = invsrcalpha;
			cullmode = none;
			
			AlphaTestEnable = false;
			AlphaBlendEnable = true;
			
			ColorArg1[0] = diffuse;
			ColorArg2[0] = texture;
			ColorOp[0] = selectarg2;
			AlphaArg1[0] = diffuse;
			AlphaArg2[0] = texture;
			AlphaOp[0] = selectarg2;

			ColorArg1[1] = texture;
			ColorArg2[1] = current;
			ColorOp[1] = blendfactoralpha;
			AlphaArg1[1] = texture;
			AlphaArg2[1] = current;
			AlphaOp[1] = blendfactoralpha;


			ColorOp[2] = disable;
			AlphaArg1[2] = diffuse;
			AlphaArg2[2] = current;
			AlphaOp[2] = modulate;

			AlphaOp[3] = disable;

			Render.Draw

			Restore.States
		}
	}
}

block WdmDrawMapBlend()
{
	technique t0
	{
		pass p0
		{
			Lighting = false;
			FogEnable = false;

			zenable = false;
			zwriteenable = false;
			
			SrcBlend = srcalpha;
			DestBlend = invsrcalpha;
			cullmode = none;
			
			AlphaTestEnable = false;
			AlphaBlendEnable = true;
			
			ColorArg1[0] = texture;
			ColorArg2[0] = diffuse;
			ColorOp[0] = modulate;
			ColorOp[1] = disable;
			AlphaArg1[0] = texture;
			AlphaArg2[0] = diffuse;
			AlphaOp[0] = modulate;
			AlphaOp[1] = disable;

			Render.Draw

			Restore.States
		}
	}
}

block WdmSeaDraw1()
{
	technique t0
	{
		pass p0
		{
			Lighting = false;
			FogEnable = false;

			TextureTransformFlags[0] = count2;
			AddressU[0] = clamp;
			AddressV[0] = clamp;

			zenable = false;
			zwriteenable = false;

			AlphaTestEnable = false;
			AlphaBlendEnable = false;

			ColorArg1[0] = texture;
			ColorOp[0] = SelectArg1;
			ColorOp[1] = disable;
			AlphaOp[0] = disable;

			Render.Draw

			Restore.States
		}
	}
}

block WdmSeaDraw2()
{
	technique t0
	{
		pass p0
		{
			Lighting = false;
			FogEnable = false;

			TextureTransformFlags[0] = count2;
			AddressU[0] = clamp;
			AddressV[0] = clamp;

			zenable = false;
			zwriteenable = false;

			AlphaTestEnable = false;
			AlphaBlendEnable = true;
			SrcBlend = srcalpha;
			DestBlend = invsrcalpha;

			ColorArg1[0] = texture;
			ColorArg2[0] = tfactor;
			ColorOp[0] = modulate;
			ColorOp[1] = disable;
			AlphaArg2[0] = tfactor;
			AlphaOp[0] = SelectArg2;
			AlphaOp[1] = disable;

			Render.Draw

			Restore.States
		}
	}
}

block WdmSeaDraw3()
{
	technique t0
	{
		pass p0
		{
			Lighting = false;
			FogEnable = false;

			TextureTransformFlags[0] = count2;
			TextureTransformFlags[1] = count2;
			TexCoordIndex[0] = 0;
			TexCoordIndex[1] = 0;			

			zenable = false;
			zwriteenable = false;

			AlphaTestEnable = false;
			AlphaBlendEnable = true;
			SrcBlend = srcalpha;
			DestBlend = one;

			ColorArg1[0] = texture;
			ColorOp[0] = SelectArg1;
			ColorArg0[1] = tfactor;
			ColorArg1[1] = texture;
			ColorArg2[1] = current;
			ColorOp[1] = lerp;
			ColorOp[2] = disable;
			AlphaArg2[0] = tfactor;
			AlphaOp[0] = SelectArg2;
			AlphaOp[1] = disable;

			Render.Draw

			Restore.States
		}
	}
}

block WdmSeaDraw4()
{
	technique t0
	{
		pass p0
		{
			Lighting = false;
			FogEnable = false;

			TextureTransformFlags[0] = count2;
			TextureTransformFlags[1] = count2;
			TexCoordIndex[0] = 0;
			TexCoordIndex[1] = 0;

			zenable = false;
			zwriteenable = false;

			AlphaTestEnable = false;
			AlphaBlendEnable = true;
			SrcBlend = one;
			DestBlend = one;
			//DestBlend = zero;

			ColorArg1[0] = texture;
			ColorOp[0] = SelectArg1;
			ColorArg1[1] = texture;
			ColorArg2[1] = current;
			ColorOp[1] = blendfactoralpha;
			ColorArg1[2] = current;
			ColorArg2[2] = tfactor;
			ColorOp[2] = substract;
			ColorArg1[3] = current;
			ColorArg2[3] = current;
			ColorOp[3] = modulate4x;			
			ColorOp[4] = disable;
			
			AlphaArg2[0] = tfactor;
			AlphaOp[0] = SelectArg2;
			AlphaArg2[1] = tfactor;
			AlphaOp[1] = SelectArg2;
			AlphaArg2[2] = tfactor;
			AlphaOp[2] = SelectArg2;
			AlphaOp[3] = disable;

			Render.Draw

			Restore.States
		}
	}
}

block WdmSeaDrawFlare()
{
	technique t0
	{
		pass p0
		{
			Lighting = false;
			FogEnable = false;

			zenable = true;
			zwriteenable = false;

			AlphaTestEnable = false;
			AlphaBlendEnable = true;
			SrcBlend = srcalpha;
			DestBlend = one;

			ColorArg1[0] = texture;
			ColorOp[0] = SelectArg1;
			ColorOp[1] = disable;

			AlphaArg1[0] = texture;
			//AlphaArg2[0] = diffuse;
			//AlphaOp[0] = modulate;
			//AlphaArg1[0] = current;
			AlphaArg2[0] = tfactor;
			AlphaOp[0] = modulate;
			AlphaOp[1] = disable;

			Render.Draw

			Restore.States
		}
	}
}


block WdmInterfaceDrawBlend()
{
	technique t0
	{
		pass p0
		{
			Lighting = false;
			FogEnable = false;

			ColorArg1[0] = texture;
			ColorArg2[0] = diffuse;
			ColorOp[0] = modulate;
			ColorOp[1] = disable;
			
			AlphaArg1[0] = texture;
			AlphaArg2[0] = diffuse;
			AlphaOp[0] = modulate;
			AlphaOp[1] = disable;

			AlphaTestEnable = false;
			AlphaBlendEnable = true;
			SrcBlend = srcalpha;
			DestBlend = invsrcalpha;
			
			Render.Draw

			Restore.States
		}
	}
}

block WdmInterfaceDrawSky()
{
	technique t0
	{
		pass p0
		{
			Lighting = false;
			FogEnable = false;
			
			zenable = false;
			zwriteenable = false;
			cullmode = none;
			
			AlphaTestEnable = false;
			AlphaBlendEnable = true;
			SrcBlend = srcalpha;
			DestBlend = invsrcalpha;
			
			ColorArg1[0] = texture;
			ColorOp[0] = SelectArg1;
			ColorArg1[1] = current;
			ColorOp[1] = SelectArg1;
			ColorOp[2] = disable;
			
			AlphaArg1[0] = texture;
			AlphaOp[0] = SelectArg1;
			AlphaArg1[1] = texture;
			AlphaArg2[1] = current;
			AlphaOp[1] = modulate;
			AlphaOp[2] = disable;
			
			Render.Draw

			Restore.States

		}
	}
}

block WdmIslandWaves()
{
	technique t0
	{
		pass p0
		{
			Lighting = false;
			FogEnable = false;
			ZWriteEnable = false;
			
			AlphaTestEnable = false;
			AlphaBlendEnable = true;			
			SrcBlend = srcalpha;
			DestBlend = invsrcalpha;

			TextureTransformFlags[0] = count2;
			AddressV[0] = clamp;
			
			ColorOp[0] = SelectArg1;
			ColorArg1[0] = texture;
			ColorOp[1] = disable;

			AlphaOp[0] = modulate;
			AlphaArg1[0] = tfactor;
			AlphaArg2[0] = texture;
			AlphaOp[1] = disable;

			Render.Draw

			Restore.States
		}
	}
}