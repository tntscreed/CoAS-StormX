block battle_arrows()
{
	technique t0
	{
		pass p0
		{
			CullMode = none;
			Lighting = false;
			FogEnable = false;
			SrcBlend = srcalpha;
			DestBlend = invsrcalpha;
			AlphaTestEnable = false;
			AlphaBlendEnable = true;
			ColorVertex = false;

			ColorOp[0] = SelectArg1;
			ColorArg1[0] = texture;

			AlphaOp[0] = SelectArg1;
			AlphaArg1[0] = texture;

			ColorOp[1] = disable;
			AlphaOp[1] = disable;

			Render.Draw
			Restore.States
		}
	}
}

block battle_icons()
{
	technique t0
	{
		pass p0
		{
			CullMode = none;
			Lighting = false;
			FogEnable = false;
			SrcBlend = srcalpha;
			DestBlend = invsrcalpha;
			AlphaTestEnable = false;
			AlphaBlendEnable = true;
			ZEnable = false;
			ColorVertex = false;

			ColorOp[0] = SelectArg1;
			ColorArg1[0] = texture;

			AlphaOp[0] = SelectArg1;
			AlphaArg1[0] = texture;

			ColorOp[1] = disable;
			AlphaOp[1] = disable;

			Render.Draw
			Restore.States
		}
	}
}

block battle_alphacutcolor()
{
	technique t0
	{
		pass p0
		{
			CullMode = none;
			Lighting = false;
			FogEnable = false;
			SrcBlend = srcalpha;
			DestBlend = invsrcalpha;
			AlphaTestEnable = false;
			AlphaBlendEnable = true;
			ZEnable = false;
			ColorVertex = true;

			ColorOp[0] = SelectArg1;
			ColorArg1[0] = diffuse;

			AlphaOp[0] = SelectArg1;
			AlphaArg1[0] = texture;

			ColorOp[1] = disable;
			AlphaOp[1] = disable;

			Render.Draw
			Restore.States
		}
	}
}

block battle_rectangle()
{
	technique t0
	{
		pass p0
		{
			CullMode = none;
			Lighting = false;
			FogEnable = false;
			SrcBlend = srcalpha;
			DestBlend = invsrcalpha;
			AlphaTestEnable = false;
			AlphaBlendEnable = true;
			ZEnable = false;
			ColorVertex = false;
			addressu[0] = clamp;
			addressv[0] = clamp;

			ColorOp[0] = SelectArg1;
			ColorArg1[0] = texture;

			AlphaOp[0] = SelectArg1;
			AlphaArg1[0] = texture;

			ColorOp[1] = disable;
			AlphaOp[1] = disable;

			Render.Draw
			Restore.States
		}
	}
}

block battle_msg()
{
	technique t0
	{
		pass p0
		{
			CullMode = none;
			Lighting = false;
			FogEnable = false;
			SrcBlend = srcalpha;
			DestBlend = invsrcalpha;
			AlphaTestEnable = false;
			AlphaBlendEnable = true;
			ZEnable = false;
			ColorVertex = true;

			ColorOp[0] = SelectArg1;
			ColorArg1[0] = texture;

			AlphaOp[0] = modulate;
			AlphaArg1[0] = texture;
			AlphaArg2[0] = diffuse;

			ColorOp[1] = disable;
			AlphaOp[1] = disable;

			Render.Draw
			Restore.States
		}
	}
}

block battle_tf_rectangle()
{
	technique t0
	{
		pass p0
		{
			CullMode = none;
			Lighting = false;
			FogEnable = false;
			SrcBlend = srcalpha;
			DestBlend = invsrcalpha;
			AlphaTestEnable = false;
			AlphaBlendEnable = true;
			ZEnable = false;
			ColorVertex = false;

			ColorOp[0] = SelectArg1;
			ColorArg1[0] = tfactor;
//			ColorArg1[0] = texture;

			AlphaOp[0] = SelectArg1;
			AlphaArg1[0] = texture;

			ColorOp[1] = disable;
			AlphaOp[1] = disable;

			Render.Draw
			Restore.States
		}
	}
}

block battle_texure_blend_tf()
{
	technique t0
	{
		pass p0
		{
			CullMode = none;
			Lighting = false;
			FogEnable = false;
			SrcBlend = srcalpha;
			DestBlend = invsrcalpha;
			AlphaTestEnable = false;
			AlphaBlendEnable = true;
			ZEnable = false;
			ColorVertex = false;

			ColorOp[0] = SelectArg1;
			ColorArg1[0] = texture;

			AlphaOp[0] = Modulate;
			AlphaArg1[0] = tfactor;
			AlphaArg2[0] = texture;

			ColorOp[1] = disable;
			AlphaOp[1] = disable;

			Render.Draw
			Restore.States
		}
	}
}

block battle_island()
{
	technique t0
	{
		pass p0
		{
			CullMode = none;
			Lighting = false;
			FogEnable = false;
			SrcBlend = srcalpha;
			DestBlend = invsrcalpha;
			AlphaTestEnable = false;
			AlphaBlendEnable = true;
			ZEnable = false;
			ColorVertex = false;

			ColorOp[0] = SelectArg1;
			ColorArg1[0] = texture;

			AlphaOp[0] = SelectArg1;
			AlphaArg1[0] = texture;

			ColorOp[1] = disable;
			AlphaOp[1] = disable;

			Render.Draw
			Restore.States
		}
	}
}

block battle_only_tfactor()
{
	technique t0
	{
		pass p0
		{
			CullMode = none;
			Lighting = false;
			FogEnable = false;
			SrcBlend = srcalpha;
			DestBlend = invsrcalpha;
			AlphaTestEnable = false;
			AlphaBlendEnable = true;
			ZEnable = false;
			ColorVertex = false;

			ColorOp[0] = SelectArg1;
			ColorArg1[0] = tfactor;

			AlphaOp[0] = SelectArg1;
			AlphaArg1[0] = tfactor;

			ColorOp[1] = disable;
			AlphaOp[1] = disable;

			Render.Draw
			Restore.States
		}
	}
}

block battle_only_color()
{
	technique t0
	{
		pass p0
		{
			CullMode = none;
			Lighting = false;
			FogEnable = false;
			SrcBlend = srcalpha;
			DestBlend = invsrcalpha;
			AlphaTestEnable = false;
			AlphaBlendEnable = true;
			ZEnable = false;
			ColorVertex = true;

			ColorOp[0] = SelectArg1;
			ColorArg1[0] = diffuse;

			AlphaOp[0] = SelectArg1;
			AlphaArg1[0] = diffuse;

			ColorOp[1] = disable;
			AlphaOp[1] = disable;

			Render.Draw
			Restore.States
		}
	}
}

block battle_island_gettexture()
{
	technique t0
	{
		pass p0
		{
			CullMode = none;
			Lighting = false;
			FogEnable = false;
			SrcBlend = srcalpha;
			DestBlend = invsrcalpha;
			AlphaTestEnable = false;
			AlphaBlendEnable = false;
			ZEnable = true;
			ColorVertex = true;

			ColorOp[0] = SelectArg1;
			ColorArg1[0] = texture;

			AlphaOp[0] = SelectArg1;
			AlphaArg1[0] = texture;

			ColorOp[1] = disable;
			AlphaOp[1] = disable;

			Render.Draw
			Restore.States
		}
	}
}

block battle_location_gettexture()
{
	technique t0
	{
		pass p0
		{
			Lighting = false;
			FogEnable = false;
			SrcBlend = srcalpha;
			DestBlend = invsrcalpha;
			AlphaTestEnable = false;
			AlphaBlendEnable = false;
			ZEnable = true;

			Render.Draw
			Restore.States
		}
	}
}

block battle_textureXtfactor()
{
	technique t0
	{
		pass p0
		{
			CullMode = none;
			Lighting = false;
			FogEnable = false;
			SrcBlend = srcalpha;
			DestBlend = invsrcalpha;
			AlphaTestEnable = false;
			AlphaBlendEnable = true;
			ZEnable = false;
			ColorVertex = true;

			ColorOp[0] = modulate;
//			ColorOp[0] = dotproduct3;

			ColorArg1[0] = texture;
			ColorArg2[0] = tfactor;

			AlphaOp[0] = SelectArg1;
			AlphaArg1[0] = texture;

			ColorOp[1] = disable;
			AlphaOp[1] = disable;

			Render.Draw
			Restore.States
		}
	}
}

block battle_colorRectangle()
{
	technique t0
	{
		pass p0
		{
			CullMode = none;
			Lighting = false;
			FogEnable = false;
			SrcBlend = srcalpha;
			DestBlend = invsrcalpha;
			AlphaTestEnable = false;
			AlphaBlendEnable = true;
			ZEnable = false;
			ColorVertex = true;

			ColorOp[0] = selectarg1;
			ColorArg1[0] = texture;
//			ColorArg2[0] = tfactor;

			AlphaOp[0] = SelectArg1;
			AlphaArg1[0] = texture;

			ColorOp[1] = disable;
			AlphaOp[1] = disable;

			Render.Draw
			Restore.States
		}
	}
}

block battle_tex_col_Rectangle()
{
	technique t0
	{
		pass p0
		{
			CullMode = none;
			Lighting = false;
			FogEnable = false;
			SrcBlend = srcalpha;
			DestBlend = invsrcalpha;
			AlphaTestEnable = false;
			AlphaBlendEnable = true;
			ZEnable = false;
			ColorVertex = true;

			ColorOp[0] = modulate2x;
			ColorArg1[0] = texture;
			ColorArg2[0] = diffuse;

			AlphaOp[0] = modulate;
			AlphaArg1[0] = texture;
			AlphaArg2[0] = diffuse;

			ColorOp[1] = disable;

			Render.Draw
			Restore.States
		}
	}
}

block battle_tex2_col_Rectangle()
{
	technique t0
	{
		pass p0
		{
			CullMode = none;
			Lighting = false;
			FogEnable = false;
			SrcBlend = srcalpha;
			DestBlend = invsrcalpha;
			AlphaTestEnable = false;
			AlphaBlendEnable = true;
			ZEnable = false;
			ColorVertex = true;

			ColorOp[0] = modulate2x;
			ColorArg1[0] = texture;
			ColorArg2[0] = diffuse;

			AlphaOp[0] = modulate;
			AlphaArg1[0] = texture;
			AlphaArg2[0] = diffuse;

			ColorOp[1] = selectarg1;
			ColorArg1[1] = current;

			AlphaOp[1] = modulate;
			AlphaArg1[1] = texture;
			AlphaArg2[1] = current;

			ColorOp[2] = disable;

			Render.Draw
			Restore.States
		}
	}
}

block battle_minimap()
{
	technique t0
	{
		pass p0
		{
			CullMode = none;
			Lighting = false;
			FogEnable = false;
			SrcBlend = srcalpha;
			DestBlend = invsrcalpha;
			AlphaTestEnable = false;
			AlphaBlendEnable = true;
			ZEnable = false;
			ColorVertex = true;

			ColorOp[0] = modulate2x;
			ColorArg1[0] = texture;
			ColorArg2[0] = diffuse;

			AlphaOp[0] = modulate;
			AlphaArg1[0] = texture;
			AlphaArg2[0] = diffuse;

			addressu[0] = clamp;
			addressv[0] = clamp;

			ColorOp[1] = selectarg1;
			ColorArg1[1] = current;

			AlphaOp[1] = modulate;
			AlphaArg1[1] = texture;
			AlphaArg2[1] = current;

			addressu[1] = clamp;
			addressv[1] = clamp;

			ColorOp[2] = disable;

			Render.Draw
			Restore.States
		}
	}
}

block battle_shadow_Rectangle()
{
	technique t0
	{
		pass p0
		{
			CullMode = none;
			Lighting = false;
			FogEnable = false;
			SrcBlend = zero;
			DestBlend = srccolor;
			AlphaTestEnable = false;
			AlphaBlendEnable = true;
			ZEnable = false;
			ColorVertex = true;

			ColorOp[0] = modulate2x;
			ColorArg1[0] = texture;
			ColorArg2[0] = diffuse;

			AlphaOp[0] = modulate;
			AlphaArg1[0] = texture;
			AlphaArg2[0] = diffuse;

			ColorOp[1] = disable;

			Render.Draw
			Restore.States
		}
	}
}

block spyglass_interface()
{
	technique t0
	{
		pass p0
		{
			CullMode = none;
			Lighting = false;
			FogEnable = false;
			SrcBlend = srcalpha;
			DestBlend = invsrcalpha;
			AlphaTestEnable = false;
			AlphaBlendEnable = true;
			ZEnable = false;
			ColorVertex = false;

			ColorOp[0] = SelectArg1;
			ColorArg1[0] = texture;

			AlphaOp[0] = modulate;
			AlphaArg1[0] = texture;
			AlphaArg2[0] = tfactor;

			ColorOp[1] = disable;
			AlphaOp[1] = disable;

			Render.Draw
			Restore.States
		}
	}
}



block battle_shippointer()
{
	technique t0
	{
		pass p0
		{
			CullMode = none;
			Lighting = false;
			FogEnable = false;
			SrcBlend = srcalpha;
			DestBlend = invsrcalpha;
			AlphaTestEnable = true;
			AlphaBlendEnable = true;
			ZEnable = true;
			ColorVertex = false;

			ColorOp[0] = SelectArg1;
			ColorArg1[0] = texture;

			AlphaOp[0] = SelectArg1;
			AlphaArg1[0] = texture;

			ColorOp[1] = disable;
			AlphaOp[1] = disable;

			Render.Draw
			Restore.States
		}
	}
}
