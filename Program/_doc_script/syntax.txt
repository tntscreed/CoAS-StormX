Scrypt Syntax

Types of Variables

1] Integer
syntax: 
	int var_name;
example:
	int GameTime;

2] Float
syntax: 
	float var_name;
example:
	float WindSpeed;

3] String
syntax: 
	string var_name;
example:
	string Name;

Arrays
syntax:
	var_type var_name[int number_of_elements];
	var_type var_name[var_int number_of_elements];
example:
	int Characteristics[10];
	string CharacteristicsNames[10];

	int array_size;
	array_size = 10;
	string CharacteristicsNames[array_size];

IF operator
syntax:
	if(a condition b)
	{
		...
		code
		...
	}
	codition: [>, <, >=, <=, !=, ==]

WHILE loop
syntax:
	while(condition) 
	{
		...
		code
		...
	}

FOR loop
syntax:
	for(int_var = init_value; int_var codition expression; inc\dec op)
	{

	}
example:
	for(int n=0;n<10;n++)
	{

	}

GOTO jump
syntax:

	goto label_name;
	...
:label_name;
	...

Include file directive
syntax:
	#include file_name

Commentary
syntax:
	/* commented text */
	// commented line

Internal functions

int		Rand(int range);
float	frnd();	// float from [0,..,1.0];
object	CreateClass(string class_name);	// bind entity to object (object attributes will be cleared)
int		CreateEntity(object& object_reference, string class_name);	// bind entity to object, return 0 if failed
void	DeleteClass(object obj_var);
void	SetEventHandler(string event_name, string function_name,int post);
void	DelEventHandler(string event_name, string function_name);
void	ExitProgram();	// quit to desktop
?		GetEventData();	// 
void	Execute(string file_name);	// run file in different space (thread like)
void	Stop();						// stop executing (thread like)
void	SendMessage(object to,string format_strinf,...);
int		LoadSegment(string file_name);	// load program into current space, return zero if failed
void 	UnloadSegment(string file_name);// unload segment (delayed)
void	Trace(string or float or int);	// trace to system.log
void	MakeInt(float or string);	// convert to int
void	MakeFloat(int or string);	// convert to float
void	LayerCreate(string name,int ordered);
void	LayerDelete(string name);
void	LayerDeleteContent(string name);	// delete classes, linked to this layer
void	LayerSetRealize(string name,int onoff);
void	LayerSetExecute(string name,int onoff);
void 	LayerSetMessages(string name,int onoff);
void 	LayerFreeze(string name,int onoff);
void	LayerAddObject(string name,object o,int level);
void	LayerDelObject(string name,object o);

int/float	abs(int/float value);
int/float	sqrt(int/float value);
int/float	sqr(int/float value);
float		sin(int/float value);
float		cos(int/float value);
float		tan(int/float value);
float		atan(int/float value);
float		atan2(int/float value);
float		stf(string);	// string to float
int			sti(string);	// string to int

void	DeleteAttribute(object obj, string attribute_access_string); 
int		GetAttributesNum(object TRef);
int		GetAttributesNum(aref TARef);
void	EntityUpdate(int on_off);
aref	GetAttributeN(aref/object , int );
string	GetAttributeName(aref/object );
int		IsEntity(object );
void	DumpAttributes(ref(object));
int		CheckAttribute(object & , string);
int		argb(int a,int r,int g,int b);
void	DeleteEntities();
void	ClearEvents();

// COMMENTS

. Code send entity id "i" to script and it cames as aref variable into script (GetEventData())